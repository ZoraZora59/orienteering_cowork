<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zora.superpoint.repository.mapper.PlayerMapper">
  <resultMap id="BaseResultMap" type="cn.zora.superpoint.model.superpoint.Player">
    <!--@mbg.generated-->
    <!--@Table player-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="wechat_user" jdbcType="VARCHAR" property="wechatUser" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="gender" jdbcType="VARCHAR" property="gender"/>
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="id_card_number" jdbcType="VARCHAR" property="idCardNumber" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, nick_name, wechat_user, avatar, gender, phone_number, id_card_number, create_time, 
    update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update player
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="nick_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.nickName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="wechat_user = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.wechatUser,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="avatar = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.avatar,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="gender = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.gender,jdbcType=OTHER}
        </foreach>
      </trim>
      <trim prefix="phone_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.phoneNumber,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="id_card_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.idCardNumber,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into player
    (nick_name, wechat_user, avatar, gender, phone_number, id_card_number, create_time, 
      update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.nickName,jdbcType=VARCHAR}, #{item.wechatUser,jdbcType=VARCHAR}, #{item.avatar,jdbcType=VARCHAR}, 
        #{item.gender,jdbcType=OTHER}, #{item.phoneNumber,jdbcType=VARCHAR}, #{item.idCardNumber,jdbcType=VARCHAR}, 
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="cn.zora.superpoint.model.superpoint.Player" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into player
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      nick_name,
      wechat_user,
      avatar,
      gender,
      phone_number,
      id_card_number,
      create_time,
      update_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{nickName,jdbcType=VARCHAR},
      #{wechatUser,jdbcType=VARCHAR},
      #{avatar,jdbcType=VARCHAR},
      #{gender,jdbcType=VARCHAR},
      #{phoneNumber,jdbcType=VARCHAR},
      #{idCardNumber,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      nick_name = #{nickName,jdbcType=VARCHAR},
      wechat_user = #{wechatUser,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      id_card_number = #{idCardNumber,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="cn.zora.superpoint.model.superpoint.Player" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into player
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="wechatUser != null">
        wechat_user,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="idCardNumber != null">
        id_card_number,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="wechatUser != null">
        #{wechatUser,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=OTHER},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="idCardNumber != null">
        #{idCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="wechatUser != null">
        wechat_user = #{wechatUser,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=OTHER},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="idCardNumber != null">
        id_card_number = #{idCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>